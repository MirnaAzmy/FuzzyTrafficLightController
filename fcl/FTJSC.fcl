/*
	CISC870
    Muhammad Aboelfotoh
*/

FUNCTION_BLOCK FTJSC	// Block definition (there may be more than one block per file)

VAR_INPUT				// Define input variables
	green : REAL;
	red : REAL;
END_VAR

VAR_OUTPUT				// Define output variable
	ext : REAL;
END_VAR

FUZZIFY green			// Fuzzify input variable 'green' (queue): {'Short', 'Medium' , 'Long'}
	TERM Short := (0, 1) (4, 0) ; 
	TERM Medium := (1, 0) (4,1) (6,1) (9,0);
	TERM Long := (6, 0) (9, 1);
END_FUZZIFY

FUZZIFY red			// Fuzzify input variable 'red' (queue): { 'Short', 'Medium', 'Long' }
	TERM Short := (0, 1) (4, 0) ; 
	TERM Medium := (1, 0) (4,1) (6,1) (9,0);
	TERM Long := (6, 0) (9, 1);
END_FUZZIFY

DEFUZZIFY ext			// Defzzzify output variable 'ext' : {'VeryShort', 'Short', 'Medium', 'Long' }
	TERM VeryShort := (0, 1) (3, 0) ; 
	TERM Short := (0, 1) (4, 0) ; 
	TERM Medium := (1, 0) (4,1) (6,1) (9,0);
	TERM Long := (6, 0) (9, 1);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY

RULEBLOCK No1
	AND : MIN;			// Use 'min' for 'and' (also implicit use 'max' for 'or' to fulfill DeMorgan's Law)
	ACT : MIN;			// Use 'min' activation method
	ACCU : MAX;			// Use 'max' accumulation method

	RULE 1 : IF green IS Short AND red is Short THEN ext IS Short;
	RULE 2 : IF green IS Short AND red is Medium THEN ext IS VeryShort; 
	RULE 3 : IF green IS Short AND red is Long THEN ext IS VeryShort;
	RULE 4 : IF green IS Medium AND red is Short THEN ext IS Medium;
	RULE 5 : IF green IS Medium AND red is Medium THEN ext IS Short;
	RULE 6 : IF green IS Medium AND red is Long THEN ext IS VeryShort;
	RULE 7 : IF green IS Long AND red is Short THEN ext IS Long;
	RULE 8 : IF green IS Long AND red is Medium THEN ext IS Medium;
	RULE 9 : IF green IS Long AND red is Long THEN ext IS Long;
END_RULEBLOCK

END_FUNCTION_BLOCK

